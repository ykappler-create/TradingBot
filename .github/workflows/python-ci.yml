name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  schedule:
    - cron: "0 6 * * 1"

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements-ci.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install CI dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-ci.txt

      # Projekt-Requirements sind optional (nicht failen lassen)
      - name: Install project requirements (best effort)
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt || echo "Soft-fail: requirements.txt konnte nicht komplett installiert werden."
          fi

      # Pre-commit nur als Check (keine Auto-Fixes)
      - name: Pre-commit (checks only)
        env:
          SKIP: ruff-format,black,end-of-file-fixer,trim-trailing-whitespace
        run: pre-commit run --all-files --show-diff-on-failure

      - name: Lint (ruff)
        run: ruff check .

      - name: Format check (black)
        run: black --check .

      - name: Type check (mypy)
        run: mypy .
        continue-on-error: true

      - name: Tests
        run: |
          if [ -d tests ]; then
            pytest -q --maxfail=1 --disable-warnings --junitxml=pytest.xml
          else
            echo "No tests/ folder – skipping tests."
          fi

      - name: Backtest report (if CSV present)
        run: |
          if [ -f bridge_out/reports/equity_curve.csv ]; then
            python scripts/backtest.py --csv bridge_out/reports/equity_curve.csv --out bridge_out/reports/equity_curve.png
          else
            echo "No equity_curve.csv – skipping backtest report."
          fi

      - name: Vulnerability scan (pip-audit)
        run: |
          if [ -f requirements.txt ]; then
            pip-audit -r requirements.txt -f cyclonedx -o sbom.json || true
          else
            pip-audit -f cyclonedx -o sbom.json || true
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ci-artifacts-${{ matrix.python-version }}
          path: |
            pytest.xml
            bridge_out/reports/equity_curve.png
            trading_log.csv
            sbom.json
          if-no-files-found: ignore
